/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface _BallotToElection {
  a: string;
  b: string;
}

export interface _CandidateUser {
  a: string;
  b: string;
}

export interface _EventTrail {
  a: string;
  b: string;
}

export interface _RunCondition {
  a: string;
  b: string;
}

export interface _RunReporter {
  a: string;
  b: string;
}

export interface _TrailRunReport {
  a: string;
  b: string;
}

export interface _TrailVisitor {
  a: string;
  b: string;
}

export interface _UserContactInfo {
  a: string;
  b: string;
}

export interface _UserMeta {
  a: string;
  b: string;
}

export interface _UserPreferences {
  a: string;
  b: string;
}

export interface ActivityLogItem {
  createdAt: Generated<Date | null>;
  id: string;
  link: string | null;
  message: string;
  messageCode: string;
  time: Date;
  updatedAt: Generated<Date | null>;
  user: string | null;
}

export interface Ballot {
  createdAt: Generated<Date | null>;
  desc: string | null;
  id: string;
  title: string;
  updatedAt: Generated<Date | null>;
}

export interface Bandaid {
  createdAt: Generated<Date | null>;
  description: string | null;
  event: string | null;
  id: string;
  memberInvolved: string | null;
  title: string | null;
  updatedAt: Generated<Date | null>;
}

export interface CloudinaryImage {
  createdAt: Generated<Date | null>;
  id: string;
  publicId: string;
  smallUrl: string | null;
  updatedAt: Generated<Date | null>;
  url: string | null;
}

export interface Condition {
  createdAt: Generated<Date | null>;
  id: string;
  notes: string | null;
  status: string;
  updatedAt: Generated<Date | null>;
}

export interface ContactInfo {
  city: string | null;
  createdAt: Generated<Date | null>;
  id: string;
  phone: string | null;
  state: string | null;
  street: string | null;
  updatedAt: Generated<Date | null>;
  zip: string | null;
}

export interface Election {
  createdAt: Generated<Date | null>;
  electionName: string;
  endTime: Date | null;
  id: string;
  startTime: Date | null;
  updatedAt: Generated<Date | null>;
}

export interface Event {
  address: string | null;
  changeDisabled: number | null;
  createdAt: Generated<Date | null>;
  creator: string | null;
  description: string | null;
  endTime: Date | null;
  featuredImage: string | null;
  host: string | null;
  id: string;
  maxAttendees: number | null;
  maxRigs: number | null;
  membersOnly: number | null;
  rallyAddress: string | null;
  startTime: Date | null;
  title: string;
  trailDifficulty: string | null;
  trailNotes: string | null;
  type: string;
  updatedAt: Generated<Date | null>;
}

export interface MembershipLogItem {
  createdAt: Generated<Date | null>;
  id: string;
  logger: string | null;
  message: string;
  messageCode: string;
  time: Generated<Date | null>;
  updatedAt: Generated<Date | null>;
  user: string | null;
}

export interface Preference {
  createdAt: Generated<Date | null>;
  emergencyContactName: string | null;
  emergencyContactPhone: string | null;
  id: string;
  photoPermissions: number | null;
  showPhoneNumber: number | null;
  tshirtSize: string | null;
  updatedAt: Generated<Date | null>;
}

export interface Registration {
  createdAt: Generated<Date | null>;
  email: string;
  firstName: string | null;
  id: string;
  lastName: string | null;
  source: string;
  token: string;
  tokenExpiry: Date;
  updatedAt: Generated<Date | null>;
}

export interface RigImage {
  id: string;
  image: string | null;
}

export interface Rsvp {
  createdAt: Generated<Date | null>;
  event: string | null;
  guestCount: number | null;
  id: string;
  isRider: number | null;
  member: string | null;
  status: string;
  updatedAt: Generated<Date | null>;
  vehicle: string | null;
}

export interface RsvpEquipment {
  nodeId: string;
  position: number;
  value: string;
}

export interface RunReport {
  createdAt: Generated<Date | null>;
  description: string | null;
  difficulty: string;
  endTime: Generated<Date | null>;
  event: string | null;
  favorite: number | null;
  id: string;
  rating: number;
  reportFiled: Generated<Date | null>;
  startTime: Generated<Date | null>;
  title: string;
  updatedAt: Generated<Date | null>;
  weather: string;
}

export interface Trail {
  address: string | null;
  createdAt: Generated<Date | null>;
  description: string | null;
  featuredImage: string | null;
  id: string;
  name: string | null;
  slug: string;
  trailheadCoords: string | null;
  updatedAt: Generated<Date | null>;
}

export interface User {
  accountStatus: string;
  accountType: string;
  avatar: string | null;
  birthdate: Date | null;
  comfortLevel: string | null;
  createdAt: Generated<Date | null>;
  email: string;
  firstName: string;
  gender: string | null;
  id: string;
  joined: Date | null;
  lastLogin: Date | null;
  lastName: string;
  office: string | null;
  password: string;
  resetToken: string | null;
  resetTokenExpiry: Date | null;
  rig: string | null;
  role: string;
  updatedAt: Generated<Date | null>;
  username: string;
  vehicle: string | null;
}

export interface UserEquipment {
  nodeId: string;
  position: number;
  value: string;
}

export interface UserMeta {
  accountSetupComplete: number | null;
  createdAt: Generated<Date | null>;
  emailMemberNotifications: number | null;
  emailPublicNotifications: number | null;
  emailVerified: number | null;
  firstLoginComplete: number | null;
  id: string;
  oldSiteMigrationComplete: number | null;
  updatedAt: Generated<Date | null>;
}

export interface UserTitles {
  nodeId: string;
  position: number;
  value: string;
}

export interface Vehicle {
  createdAt: Generated<Date | null>;
  id: string;
  image: string | null;
  make: string;
  model: string;
  name: string | null;
  outfitLevel: string | null;
  trim: string | null;
  updatedAt: Generated<Date | null>;
  year: number;
}

export interface VehicleMods {
  nodeId: string;
  position: number;
  value: string;
}

export interface Vote {
  ballot: string | null;
  candidate: string | null;
  createdAt: Generated<Date | null>;
  id: string;
  updatedAt: Generated<Date | null>;
  voter: string | null;
}

export interface DB {
  _BallotToElection: _BallotToElection;
  _CandidateUser: _CandidateUser;
  _EventTrail: _EventTrail;
  _RunCondition: _RunCondition;
  _RunReporter: _RunReporter;
  _TrailRunReport: _TrailRunReport;
  _TrailVisitor: _TrailVisitor;
  _UserContactInfo: _UserContactInfo;
  _UserMeta: _UserMeta;
  _UserPreferences: _UserPreferences;
  activityLogItem: ActivityLogItem;
  ballot: Ballot;
  bandaid: Bandaid;
  cloudinaryImage: CloudinaryImage;
  condition: Condition;
  contactInfo: ContactInfo;
  election: Election;
  event: Event;
  membershipLogItem: MembershipLogItem;
  preference: Preference;
  registration: Registration;
  rigImage: RigImage;
  rsvp: Rsvp;
  rsvpEquipment: RsvpEquipment;
  runReport: RunReport;
  trail: Trail;
  user: User;
  userEquipment: UserEquipment;
  userMeta: UserMeta;
  userTitles: UserTitles;
  vehicle: Vehicle;
  vehicleMods: VehicleMods;
  vote: Vote;
}
